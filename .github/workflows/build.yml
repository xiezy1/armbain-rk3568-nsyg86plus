name: Build Armbian RK3568

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
env:
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: armbian-rk3568
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.PUSH_RELEASE_TOKEN }}   # 必须是 PAT，有 repo 权限

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl build-essential \
            gcc g++ bc bison flex libssl-dev make libc6-dev \
            libncurses5-dev crossbuild-essential-arm64 \
            python3 python3-distutils python3-apt qemu-user-static \
            debootstrap debian-archive-keyring

      - name: Clone Armbian build scripts
        run: |
          git clone --depth=1 https://github.com/armbian/build.git armbian-build
          cp config/boards/nsy-g68-plus.conf armbian-build/config/boards/
          find build/output/debs/ -type d -name "linux-dtb-*" | while read d; do
              cp ./rk3568-nsy-g68-plus.dtb "$d/boot/dtb/rockchip/"
          done

      - name: Build Armbian
        run: |
          cd armbian-build
          ./compile.sh BOARD=nsy-g68-plus BRANCH=current RELEASE=bookworm \
                        BUILD_MINIMAL=no BUILD_DESKTOP=no KERNEL_CONFIGURE=no

      - name: Prepare firmware path
        run: |
          # 假设编译后的镜像在 armbian-build/output/images/
          if [ -d armbian-build/output/images ]; then
            echo "FIRMWARE_PATH=$PWD/armbian-build/output/images" >> $GITHUB_ENV
          else
            echo "目录不存在，无法上传镜像"
            exit 1
          fi

      - name: Zip firmware (single asset)
        if: env.FIRMWARE_RELEASE == 'true'
        run: |
          mkdir -p /tmp/release
          cp -r "${{ env.FIRMWARE_PATH }}"/* /tmp/release/
          cd /tmp && zip -r firmware.zip release
          echo "ASSET=/tmp/firmware.zip" >> $GITHUB_ENV

      # --- Option A: 使用 ncipollo/release-action（保持你原来的习惯） ---
      - name: Upload Firmware to GitHub Release (ncipollo)
        if: env.FIRMWARE_RELEASE == 'true'
        uses: ncipollo/release-action@v1
        with:
          name: Armbian ${{ env.FIRMWARE_TAG }}
          tag: v1.0.0
          allowUpdates: true
          artifacts: ${{ env.ASSET }}
          body: |
            **This is the pre-built Armbian image for ${{ env.FIRMWARE_TAG }}**
            - 固件路径: ${{ env.FIRMWARE_PATH }}
            - 时间: $(date +"%Y-%m-%d %H:%M:%S")
          token: ${{ secrets.PUSH_RELEASE_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUSH_RELEASE_TOKEN }}
